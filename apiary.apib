FORMAT: 1A

HOST: https://sandbox-backoffice.clanofthecloud.com

# bo-clanofthecloud API

[CloudBuilder](http://www.clanofthecloud.com) is a Mobile Gaming Backend as a Service (Baas) Company. You can create an account on our website, 
and try us with your next social game! We're scalable, multiplateform and we offer a full API.

## User/Password Authentication

Once you've created an account, you can provision a Game in the FrontOffice application in either sandbox or production mode.
We're using a classic User/ Password couple to authenticate all requests.

Every request should have one header set with your credentials :

**Authorization : Basic encode64(user:password)**

# Group Company

## Detail [/api/v1/company]
### Get information [GET]

Give information about games and domains handled by your company
Returns list of games, and for each games the list of allowed domains

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "email": "user@mail.com",
          "name": "user"
          "games": [
            {
              "name": "com.clanofthecloud.cloudbuilder",
              "domains": [
                "private",
                "com.clanofthecloud.cloudbuilder.test"
              ]
            },
            {
              "name": "com.clanofthecloud.testgame",
              "domains": [
                "private"
              ]
            }
          ],
        }  
        
        
## Export [/api/v1/job/company/userexport]
### Export Company [POST]

**warning : this method is part of premium option, contact us for more information**

This method export all data related to users registered for the games of the company.
One call a day is extremly recommanded.

When job is done, a mail is sent to the email stored in the company information.
This mail has a link to the zipped file which contains the data. This unzipped file is in json format : an array of json object describing each gamer.


In the fied `data`of the body you may specify which export you want:

|Field|Type|Description|
|---|---|---|
|full|boolean, optional|specify a full export
|startDate|json date, optional | begining date, export users connected to after this date (included)
|endDate|json date, optional| ending date, export users connected to before this date (included). if not specified, endDate = startDate.

On partial export, only the transactions made after (or equal) the startDate are included regardless the endDate.
Only the day is taken in account for startDate and endDate, regardless of the time.

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
    
    + Body 
    
            {
             "data" : { 
                "startDate" : "2015-01-29T00:00:00.000Z",
                "endDate" : "2015-01-29T00:00:00.000Z"
             }
            }
             
             
+ Response 200 (application/json)

        {
        }    


# Group Game 

## Game details [/api/v1/game/{game}]
## GET

This method returns detail about the specifed game. You'll get domains, leaderboards, acheivements, etc...

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

            {
              "_id": "541715e10476afa004fc3b82",
              "appid": "com.clanofthecloud.cloudbuilder",
              "registerTime": "2014-09-15T16:37:53.115Z",
              "config": {
                "enable": true,
                "domains": [
                  "com.clanofthecloud.cloudbuilder.m3Nsd85GNQd3",
                  "com.clanofthecloud.cloudbuilder.test"
                ]
              },
              "leaderboards": {
                "testboard": {
                  "order": "hightolow"
                },
                "My_Leaderboard": {
                  "order": "hightolow"
                }
              },
              "certs": {
                "android": {
                  "enable": false,
                  "senderID": "",
                  "apikey": ""
                },
                "ios": {
                  "enable": false,
                  "cert": "",
                  "key": "",
                  "certData": "",
                  "keyData": ""
                },
                "macos": {
                  "enable": false,
                  "cert": "",
                  "key": "",
                  "certData": "",
                  "keyData": ""
                }
              }
            } 

## Game VFS  [/api/v1/game/{game}/storage/{domain}]

Allows to manage vfs in a global manner. Game VFS are shared between users.

It's good place to store game board or any global data for users.

### List all key-value [GET]

Retreive all the game key-values

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... the involved domain private is default one 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        [ 
        {"fskey": "key01", "fsvalue": "value of key01"}, 
        {"fskey": "key02", "fsvalue": "value of key02"}
        ]

### Replace data [POST]

Change/Replace the game data.

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... the involved domain private is default one 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

    + Body 
        
            [ 
            {"fskey": "key01", "fsvalue": "value of key01"}, 
            {"fskey": "key02", "fsvalue": "value of key02"}
            ]
        
        
+ Response 200 (application/json)


## Single Game VFS  [/api/v1/game/{game}/storage/{domain}/{key}]

Access VFS data indivudually.

### Read one key [GET]

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... the involved domain private is default one 
    + key (required, string, `key01`) ... the desired key 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
            "key01": "value of key01"
        }

### Write one key [PUT]

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... the involved domain private is default one 
    + key (required, string, `key01`) ... the desired key 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

    + Body 
        
            "new value of key 01"
        
+ Response 200 (application/json)

        {
          "done": 1
        }


## Leaderboards [/api/v1/game/{game}/domain/{domain}/leaderboard/{board}{?limit,skip}]

### Highscore for a board [GET]

returns user information and score ordered by rank for the specified leaderboard

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... 
    + board (required, string, `testboard`) ...
    + limit = `10` (optional, number, `10`) ... number of desired responses
    + skip = `0` (optional, number, `0`) ... skip the `skip` firsts responses


+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

+ Response 200 (application/json)

            {
              "testboard": {
                "maxpage": 1,
                "page": 1,
                "rankOfFirst": 1,
                "scores": [
                  {
                    "score": {
                      "timestamp": "2014-12-15T09:30:56.303Z",
                      "score": 1400,
                      "info": null
                    },
                    "gamer_id": "5476c2c59ae8e8f922fb70ba",
                    "profile": {
                      "displayName": "Gamer",
                      "lang": "en",
                      "addr1": "test"
                    }
                  },
                  {
                    "score": {
                      "timestamp": "2014-12-15T14:27:06.242Z",
                      "score": 1200,
                      "info": null
                    },
                    "gamer_id": "5476c2e69ae8e8f922fb70bc",
                    "profile": {
                      "displayName": "Guest",
                      "lang": "en"
                    }
                  },
                  {
                    "score": {
                      "timestamp": "2014-10-22T10:09:19.500Z",
                      "score": 140,
                      "info": "with Donald"
                    },
                    "gamer_id": "541429b6dc346f01314edef3",
                    "profile": {
                      "displayName": "Guest",
                      "lang": "en",
                      "addr1": "test"
                    }
                  },
                  {
                    "score": {
                      "timestamp": "2014-09-26T15:53:39.880Z",
                      "score": 140,
                      "info": "with Donald"
                    },
                    "gamer_id": "541189411ea82ffa76b7b72a",
                    "profile": {
                      "displayName": "Gamer",
                      "lang": "en",
                      "addr1": "test"
                    }
                  }
                ]
              }
            } 
            

## Achievements [/api/v1/game/{game}/achievements/{domain}]
### List achievements [GET]

Returns the parameters of all the acheivements defined for a game.

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + domain (required, string, `private`) ... 


+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

+ Response 200 (application/json)

            {
                "jumper": {
                "type": "limit",
                "config": {
                  "unit": "jump",
                  "maxValue": "10"
                }
              }
            }     


# Group Users
## Members [/api/v1/game/{game}/users{?limit,skip}]
### List gamers for a game [GET]

Returns the list of all users registered to a game.

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + limit = `10` (optional, number, `10`) ... number of desired responses
    + skip = `0` (optional, number, `0`) ... skip the `skip` firsts responses

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
            "total" : 553,
            "list": [
            {
              "_id": "543260a89df16e023471dd22",
              "network": "anonymous",
              "networkid": "543260a89df16e023471dd21",
              "registerTime": "2014-10-06T09:28:08.189Z",
              "registerBy": "com.clanofthecloud.cloudbuilder",
              "games": [
                {
                  "appid": "com.clanofthecloud.cloudbuilder",
                  "ts": "2014-10-06T09:28:08.189Z"
                }
              ],
              "profile": {
                "displayName": "Guest",
                "lang": "en"
              },
              "devices": [
                {
                  "ts": "2014-10-06T09:28:08.204Z",
                  "ip": "10.0.2.2",
                  "sdk": "1.9.3"
                }
              ],
              "mqPending": 0,
              "mqTimedout": 0
            }
        }

## Profile [/api/v1/game/{game}/user/{userid}/profile]
### Get global user profile [GET]

Returns the global profile of a gamers.

This profile if shared with of the game running on the cloudbuilder system, not only your game)

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "displayName": "Guest",
          "lang": "en"
        } 

### Change global user profile [POST]

Change the global profile. This impact all the game of the cloudbuilder platform.

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
    + Body
    
            {
              "displayName": "My Name",
              "lang": "fr"
            } 

+ Response 200 (application/json)

        {
          "done": 1,
          "profile" :  {
            "displayName": "My Name",
            "lang": "en"
            }
        } 

## Storage [/api/v1/game/{game}/user/{userid}/storage/{domain}]

Key-value associated with a user in the specified domain.

### Get Data [GET]

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        [ 
        {"fskey": "key01", "fsvalue": "value of key01"}, 
        {"fskey": "key02", "fsvalue": "value of key02"}
        ]


### Set Data [POST]

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
    + Body 
        
            [ 
            {"fskey": "key01", "fsvalue": "value of key01"}, 
            {"fskey": "key02", "fsvalue": "value of key02"}
            ]
        
+ Response 200 (application/json)

## Properties [/api/v1/game/{game}/user/{userid}/domain/{domain}/properties]

Properties are information related to a user in the specified domain. It's good place to save data related to a user ( such as his/her level, XP) which will be involved in match making

This data is available to all game which are allowed to access to the specifed domain.

This properties are usefull when searching for an oppenents in  match making.

### Get user properties [GET]

Returns the user properties

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 
    
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "prop1": "value1",
          "prop2": "value2"
        } 

### Change user properties [POST]

Replace/Change the user properties

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 
    
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
    + Body
    
            {
              "prop1": "value1",
              "prop2": "value2"
            } 

+ Response 200 (application/json)

        "1"

## Group Relationship

### Friends [/api/v1/game/{game}/user/{userid}/friends/{domain}]
#### GET


+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 
    
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "friends": [],
          "blackList": []
        }   


### Remove a friend [/api/v1/game/{game}/user/{userid}/friend/{domain}/{friendid}]
#### DELETE

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 
    + friendid (required, string, `54326176374a7c03344ba9fa`) ... 
   
+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "done": 1
        }   

### Sponsoring [/api/v1/game/{game}/user/{userid}/friends/{domain}/god]
#### List godfather and godchildren [GET]

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "godfather": null,
          "godchildren": []
        } 
    
## Group Transaction
### Balance [/api/v1/game/{game}/user/{userid}/balance/{domain}]
#### GET

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==
                
+ Response 200 (application/json)

        {
          "Gold": 100
        } 

### Add Transaction [/api/v1/game/{game}/user/{userid}/transaction/{domain}]
#### POST

the response is the new balance for this currency

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

    + Body
    
            {
                "tx" : {"Gold" : 100},
                "description" : "this is a gold tx"
            }
            
+ Response 200 (application/json)

        {
          "Gold": 200
        } 


### History [/api/v1/game/{game}/user/{userid}/txHistory/{domain}{?skip,limit}]
#### GET

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 
    + limit = `10` (optional, number, `10`) ... number of desired responses
    + skip = `0` (optional, number, `0`) ... skip the `skip` firsts responses


+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

+ Response 200 (application/json)

            {
              "transactions": [
                {
                  "domain": "com.clanofthecloud.cloudbuilder.azerty",
                  "ts": "2015-01-05T14:11:35.489Z",
                  "tx": {
                    "Gold": 100
                  },
                  "desc": "this is a gold tx"
                },
                {
                  "domain": "com.clanofthecloud.cloudbuilder.azerty",
                  "ts": "2014-11-27T06:53:26.104Z",
                  "tx": {
                    "Gold": 100
                  },
                  "desc": "Backoffice transaction"
                }
              ],
              "count": 2
            }    


  
## Group Event          
### Send Event [/api/v1/game/{game}/user/{userid}/message/{domain}]
#### POST

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 


+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

    + Body
    
            {
                "type" : "contest.end",
                "message" : "contest ended",
                "osn" : {"en" : "you win the contest", "fr" : "vous avez gagné le concour"}
            }
            

            
+ Response 200 (application/json)

            {
              "id": 1
            }                
                   

## Group Scores
### bestscores [/api/v1/game/{game}/user/{userid}/domain/{domain}/bestscores]
#### GET 

Returns the scores of a user for all the leaderbord he/she play.

+ Parameters
    + game (required, string, `com.clanofthecloud.cloudbuilder`) ... the game id 
    + userid (required, string, `543260a89df16e023471dd22`) ... 
    + domain (required, string, `private`) ... 

+ Request (application/json)

    + Headers
    
                Authorization : Basic dXNlcjpwYXNzd29yZA==

            
+ Response 200 (application/json)

            {
            }                
                   




